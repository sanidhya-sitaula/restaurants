{"version":3,"sources":["components/MediaCard.js","components/Places.js","components/Restaurants.js","components/Header.js","components/Map.js","components/Details.js","components/SearchBar.js","components/RestSearch.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","maxWidth","height","marginBottom","marginTop","marginLeft","marginRight","fontFamily","media","link","color","textDecoration","font","MediaCard","props","classes","Card","className","CardActionArea","CardContent","Typography","gutterBottom","variant","component","href","title","display","cuisines","address","Places","resdata","console","log","data","result","slice","map","place","Grid","item","xs","sm","md","style","to","restaurant_id","length","restaurant_name","formatted","price","price_range","Restaurants","state","url","this","long","lat","fetch","then","response","json","setState","parentCallback","container","spacing","renderResults","React","Component","Header","class","MapContainer","isOpen","lon","mapStyles","defaultCenter","lng","handleToggleOpen","handleToggleClose","googleMapsApiKey","mapContainerStyle","zoom","center","key","name","position","geo","onClick","Details","loading","menus","location","pathname","detail","menu_item_name","menu_item_pricing","priceString","subsection","menu_item_description","restaurant_phone","restaurant_hours","renderDetails","SearchBar","term","onInputChange","event","target","value","onFormSubmit","preventDefault","onSubmit","type","onChange","RestSearch","string","val","encodeURI","url2","response2","App","setData","restaurant_data","onTermSubmit","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","path","exact","searchTerm","search","Map","displayPage","Home","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ecdf0fea.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from \"@material-ui/core/styles/withStyles\"\n\n\nconst useStyles = makeStyles({\n  root: {\n    width:300,\n    maxWidth: 300,\n    height : 'auto',\n    marginBottom : 7,\n    marginTop : 20, \n    marginLeft:32,\n    marginRight:32,\n    fontFamily : 'Quicksand',\n\n  },\n  media: {\n    height: 100,\n  },\n  link : {\n      color : 'black',\n      textDecoration : 'None',\n      fontFamily : 'Quicksand',\n  },\n  font : {\n  }\n \n});\n\nexport default function MediaCard(props) {\n    const classes = useStyles();\n  \n    return (\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              <a className = {classes.link} href = \"#\">{props.title}</a>\n            </Typography>\n            <Typography variant = \"caption\" display = \"block\" gutterBottom>\n                <span className = {classes.font}>{props.cuisines} Cuisine</span>\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              <span className = {classes.font}>{props.address}</span>\n    \n            </Typography>\n          </CardContent>\n        </CardActionArea>\n  \n      </Card>\n    );\n  }","import React from 'react'; \nimport MediaCard from './MediaCard';\nimport Grid from '@material-ui/core/Grid'; \nimport { Link } from 'react-router-dom'; \n\n\nfunction Places (resdata) {\n\n    console.log(resdata);\n    const places = resdata.data.result.data.slice(0,20).map(place => {\n                    \n\n\n        return (\n            <div>\n             <Grid item xs = {12} sm = {12} md = {12} style = {{marginBottom : 10, marginTop : 10}} >\n            <Link to = {\"/details/\" + place.restaurant_id} \n            > {place.cuisines.length != 0 ? <MediaCard variant = \"outlined\" title = {place.restaurant_name} cuisines = {place.cuisines[0]} address = {place.address.formatted} price = {place.price_range}/> : <MediaCard variant = \"outlined\" title = {place.restaurant_name} cuisines = '' address = {place.address.formatted} price = {place.price_range}/> \n            \n            \n            }</Link>\n            </Grid>\n            </div>\n        )\n        \n    })\n\n    return places; \n}\n\nexport default Places;","import React from 'react'; \nimport MediaCard from './MediaCard';\nimport Grid from '@material-ui/core/Grid'; \nimport { Link } from 'react-router-dom'; \nimport Places from './Places'; \n\nclass Restaurants extends React.Component{\n\n    state = {\n        data : '', \n    }\n\n\n\n    async componentDidMount (){\n\n      \n\n\n\n        let url = `https://us-restaurant-menus.p.rapidapi.com/restaurants/search/geo?page=1&lon=${this.props.long}8&lat=${this.props.lat}&distance=1`; \n\n        await fetch (url, {\n\n            \"method\": \"GET\",\n\n            \"headers\" : {\n               \"X-RapidAPI-Host\"  : \"us-restaurant-menus.p.rapidapi.com\",\n               \"X-RapidAPI-Key\": \"150f594e71mshd2646f768ee0f90p1b0d7ejsne13ac63cc8ab\",\n\t            \"useQueryString\": true\n            }\n\n        }).then(response => response.json()).then(data => this.setState({data}));\n\n        \n        this.props.parentCallback(this.state.data); \n    \n\n   \n\n    }\n\n    \n\n    renderResults() {\n        \n        if (!this.state.data){\n            return <div>Loading...</div>; \n        }\n\n        else {\n            return <Places data = {this.state.data}/>\n        }\n    }\n   \n\n    render() {\n        return(\n        <div>\n        <Grid item style = {{display : 'flex'}} container spacing = {8} >\n\n            {this.renderResults()} \n        </Grid>        \n        </div>\n    \n        );\n}\n}\n\nexport default Restaurants;","import React from 'react'; \n\nexport default function Header(props){\n\n    return(\n        <div>\n        <h1 class = \"title\">{props.title}</h1>\n        </div>\n    ); \n\n}","import React from 'react';\nimport { GoogleMap, LoadScript, Marker, InfoWindow} from '@react-google-maps/api';\n\n\nclass MapContainer extends React.Component{\n  \n\n    state = {\n        isOpen : false,\n        'lat' : this.props.lat, \n        'lon' : this.props.lon\n    }\n\n\n    mapStyles = {        \n    height: \"80vh\",\n    width: \"100%\"};\n  \n    defaultCenter = {\n        lat: this.state.lat, lng: this.state.lon\n  }\n\n  handleToggleOpen = () => {\n\n\tthis.setState({\n\t\tisOpen: true\n\t});\n}\n\nhandleToggleClose = () => {\n\tthis.setState({\n\t\tisOpen: false\n\t});\n}\n\n  render(){\n  return (\n     <LoadScript\n       googleMapsApiKey='AIzaSyAOfytgTSy-bypCikaz1t56NL7o5AqR4GM'>\n        <GoogleMap\n          mapContainerStyle={this.mapStyles}\n          zoom={13}\n          center={this.props.lat ? this.defaultCenter : ''}>\n\n   {this.props.data.result.data.map(place => {\n              return (\n                  <Marker key = {place.name} position = {{'lat' : place.geo.lat, 'lng' : place.geo.lon}} onClick={() => this.handleToggleOpen()}>\n                      { this.state.isOpen &&\n                       <InfoWindow>\n\t\t\t                <h4>{place.restaurant_name}</h4>\n\t\t                </InfoWindow>\n             }\n                      </Marker>\n\n              )\n          })   \n        }\n           </GoogleMap>\n\n        \n     </LoadScript>\n  )\n        \n}\n}\n\nexport default MapContainer;","import React from 'react'; \nimport * as qs from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport Header from './Header'; \nimport './Details.css'; \nimport Grid from '@material-ui/core/Grid'; \nimport Map from './Map'; \n\nclass Details extends React.Component{\n\n    state = {\n        data : '',\n        loading : true,\n        menus : ''\n    }\n\n\n\n    async componentDidMount(){\n        let url = `https://us-restaurant-menus.p.rapidapi.com/restaurant/${this.props.location.pathname.slice(9)}/menuitems?page=1`; \n\n        \n        await fetch (url, {\n            \"method\" : \"GET\", \n            \"headers\" : {\n                \"x-rapidapi-host\": \"us-restaurant-menus.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"4fc1b63d54msh5b49fb5ab2014a2p1a5ef2jsn6846ee94d7ca\"\n            }\n\n        }).then(response => response.json()).then(data=>this.setState({data})); \n\n        this.setState({loading : false});\n\n        console.log(this.state.data);\n\n\n    }\n    \n    renderDetails(){\n\n        const details = this.state.data.result.data.map(detail => {\n            return (\n                <div>\n                    <Grid item xs = {12} sm = {12} md = {12} style = {{marginBottom : 10, marginTop : 10}} >\n                <div class = \"item\">\n                   <div class=\"ui card\">\n                        <div class=\"content\">\n                            <div class=\"header menu_header\">{detail.menu_item_name}</div>\n                            <div class=\"meta\">\n                            <span class=\"right floated time\">{detail.menu_item_pricing? \"\" : detail.menu_item_pricing[0].priceString}</span>\n                            <span class =\"left floated category\">{detail.subsection}</span>\n                            </div>\n                           \n                        </div>\n                        <div class = \"extra content\">\n                        <div class=\"description\">\n                                 {detail.menu_item_description? detail.menu_item_description : \"No description available\"}\n\n                        </div>\n                        </div>\n                        </div>\n                </div>\n                </Grid>\n\n                </div>\n            )\n        })\n\n        return details;\n\n    }\n\n\n\n\n    render() {\n        return(\n            <div>\n                <div class = \"headerTitle\">\n            {this.state.loading? <Header title = \"\" /> : <Header title = {this.state.data.result.data[0].restaurant_name} /> }\n            {this.state.loading? \"\" : <h3>{this.state.data.result.data[0].address.formatted}</h3>} \n            {this.state.loading? \"\" : <h4 class = \"price_range\">{this.state.data.result.data[0].price_range}</h4>} \n            {this.state.loading? \"\" : <h4 class = \"\">{this.state.data.result.data[0].restaurant_phone}</h4>} \n            {this.state.loading? \"\" : <h4 class = \"\">{this.state.data.result.data[0].restaurant_hours}</h4>} \n\n                </div>\n            <div class = \"container\">\n\n           \n            <h1>Menu</h1>\n            <Grid item style = {{display : 'flex'}} container spacing = {3} >\n\n            {this.state.loading? \"\" : this.renderDetails()};\n\n            </Grid>\n            </div>\n            </div>\n            ) \n          \n    }\n}\n\nexport default Details; ","import React from 'react'; \nimport Restaurants from '../components/Restaurants'; \n\n\nclass SearchBar extends React.Component {\n\n    state = {\n        term : ''\n    };\n\n    onInputChange = (event) => {\n        this.setState({term : event.target.value}); \n    }; \n\n\n    onFormSubmit = (event) => {\n        event.preventDefault(); \n\n        this.props.onFormSubmit(this.state.term); \n\n        //TODO : Make sure we call callback from parent component\n\n    }\n\n    render(){\n        return (\n        \n        <div className = \"search-bar ui segment\">\n            \n            <form className = \"ui form\" onSubmit = {this.onFormSubmit}> \n                <div className = \"field\">\n                    <label>Restaurant Search</label>\n                    <input \n                    type = \"text\" \n                    value = {this.state.term}\n                    onChange = {this.onInputChange}\n                    />\n                </div>\n            </form>\n\n\n        </div>\n        \n        \n        \n        );\n    }\n}\n\nexport default SearchBar; ","import React from 'react'; \nimport Places from './Places'; \nimport Grid from '@material-ui/core/Grid'; \n\nclass RestSearch extends React.Component {\n\n    state = {\n        data : '',\n        loading : true\n    }\n\n\n    async componentDidMount() {\n\n    let string = this.props.val; \n    let val = encodeURI(`{\"restaurant_name\"  : \"${string}\"}`)\n\n    let url2 = `https://us-restaurant-menus.p.rapidapi.com/restaurants/search/fields?fields=${val}`; \n   \n    await fetch (url2, {\n\n\n\n        \"method\": \"GET\",\n\n        \"headers\" : {\n        \"X-RapidAPI-Host\"  : \"us-restaurant-menus.p.rapidapi.com\",\n        \"X-RapidAPI-Key\": \"4fc1b63d54msh5b49fb5ab2014a2p1a5ef2jsn6846ee94d7ca\",\n        \"useQueryString\": true\n        },\n\n        \"query\" : {\n\n        }\n\n    }).then(response2 => response2.json()).then(data => this.setState({data}));\n\n\n    console.log(this.state.data);\n\n    this.setState({loading : false})\n}\n\n    \n    render() {\n\n        return (\n            <div>\n               {this.state.loading? <div>Loading...</div> : \n                       <Grid item style = {{display : 'flex'}} container spacing = {8} >\n\n                         <Places data = {this.state.data} />  \n                </Grid>\n               }\n            </div>\n        )\n    }\n\n}\n\nexport default RestSearch;","import React from 'react';\nimport '../App.css';\nimport Restaurants from './Restaurants'; \nimport Header from './Header'; \nimport Maps from './Map'; \nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \nimport Details from './Details'; \nimport SearchBar from './SearchBar'; \nimport RestSearch from './RestSearch'; \n\nclass App extends React.Component{\n\n  state = {\n    'lat' : '',\n    'long' : '',\n    'loading' : false,\n     'data' : '',\n     'searchTerm' : '',\n  }\n\n  //set the data by receiving the response from Restaurants \n  setData = (restaurant_data) => {\n    this.setState({data : restaurant_data})\n    console.log(this.state.data);\n  } \n\n\n  componentDidMount(){\n\n    navigator.geolocation.getCurrentPosition((position) => {\n        this.setState({'lat' : position.coords.latitude, 'long' :position.coords.longitude, 'loading' : true}); \n      });\n  \n  }\n\n  onTermSubmit = term => {\n    \n    this.setState( {'searchTerm' : term} ); \n  \n    }\n\n  render(){\n    return (\n      <div>\n          <Router>\n            <Route path = '/details' exact component = {Details} />\n        </Router>\n      <div class = \"container\">\n        <Header title = \"Restaurants Near You\"/>\n        <SearchBar onFormSubmit = {this.onTermSubmit}/>\n        {this.state.searchTerm?<div class = \"searchResults\"> <RestSearch val = {this.state.searchTerm} >Search Results </RestSearch> </div>:\n        <div>\n        <div class = \"rest-content\">\n          {this.state.loading? <Restaurants parentCallback = {this.setData} lat = {this.state.lat} long = {this.state.long} search = {false} />: <div>Loading...</div> }\n        </div>\n        <div class = \"map\">\n          <h1 class = \"title\">Map View</h1>\n          {this.state.data ? <Maps displayPage = {false} lat = {this.state.lat} lon = {this.state.long} data = {this.state.data} /> : <div>Loading maps...</div>}\n        </div>\n        </div>\n\n}\n        \n      </div>\n  \n\n      </div>\n    );\n    ; \n  }\n}\n\nexport default App;","import React from 'react'; \n\nimport './App.css'; \n\nimport Home from './components/Home'; \nimport Details from './components/Details';\nimport SearchBar from './components/SearchBar';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'; \n\nfunction App () {\n  return (\n    <Router>\n      <div className = \"App\">\n          <Switch>\n\n            <Route path = \"/\" exact component = {Home} />\n            <Route path = \"/details\" component = {Details} />\n\n          </Switch>\n\n      </div>\n\n    </Router>\n  )\n}\n\nexport default App; ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}